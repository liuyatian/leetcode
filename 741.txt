#动态规划
class Solution {
public:
    int cherryPickup(vector<vector<int>>& grid) {
        int n=grid.size();
        vector<vector<int> >res(n,vector<int>(n,-1));
        res[0][0]=grid[0][0];
        for(int k=1;k<n*n-1;k++){
            for(int i=min(k,n-1);i>=0&&i>=k-n+1;i--){
                for(int j=min(k,n-1);j>=0&&j>=k-n+1;j--){
                    int p=k-i,q=k-j;
                    if(grid[i][k-i]==-1||grid[j][k-j]==-1){
                        res[i][j]=-1;
                        continue;
                    }
                    if(p>0&&j>0)
                        res[i][j]=max(res[i][j],res[i][j-1]);
                    if(i>0&&j>0)
                        res[i][j]=max(res[i][j],res[i-1][j-1]);
                    if(i>0&&q>0)
                        res[i][j]=max(res[i][j],res[i-1][j]);
                    if(res[i][j]<0)
                        continue;
                    if(i==j)
                        res[i][j]+=grid[i][k-i];
                    else
                        res[i][j]+=grid[i][k-i]+grid[j][k-j];
                }
            }
        }
        return max(0,res[n-1][n-1]);
    }
};