#递归
class Solution {
public:
    map<string,vector<int> >mp;
    vector<int> diffWaysToCompute(string input) {
        vector<int>res;
        if(input.size()==0)
            return res;
        res=solver(input);
        return res;
    }
    vector<int> solver(string input){
        vector<int>res;
        int n=input.size();
        for(int i=0;i<n;i++){
            if(input[i]=='+'||input[i]=='-'||input[i]=='*'){
                vector<int>resleft;
                vector<int>resright;
                string str1=input.substr(0,i);
                string str2=input.substr(i+1);
                if(mp.find(str1)!=mp.end())
                    resleft=mp[str1];
                else
                    resleft=solver(str1);
                if(mp.find(str2)!=mp.end())
                    resright=mp[str2];
                else
                    resright=solver(str2);
                for(int x:resleft){
                    for(int y:resright){
                        if(input[i]=='+')
                            res.push_back(x+y);
                        else if(input[i]=='-')
                            res.push_back(x-y);
                        else
                            res.push_back(x*y);
                    }
                }
            }
        }
        if(res.size()==0)
            res.push_back(atoi(input.c_str()));
        mp[input]=res;
        return res;
    }
};